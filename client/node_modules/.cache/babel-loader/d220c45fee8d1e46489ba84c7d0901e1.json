{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../contstants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = async (req, res) => {\n  const post = req.body;\n  const newPostMessage = newPostMessage({\n    ...post,\n    creator: req.userId,\n    createdAt: new Date().toISOString()\n  });\n  try {\n    await newPostMessage.save();\n    res.status(201).json(newPostMessage);\n  } catch (error) {\n    res.status(409).json({\n      message: error.message\n    });\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","req","res","post","body","newPostMessage","creator","userId","createdAt","Date","toISOString","save","status","json","updatePost","id","deletePost","likePost"],"sources":["/Users/jademaxilom/Keepsake/client/src/actions/posts.js"],"sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, LIKE} from '../contstants/actionTypes'\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const {data} = await api.fetchPosts();\n\n        dispatch({type: FETCH_ALL, payload: data});\n\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport const createPost = async (req, res) => {\n  const post = req.body;\n\n  const newPostMessage = newPostMessage({ ...post, creator: req.userId, createdAt: new Date().toISOString() })\n\n  try {\n      await newPostMessage.save();\n\n      res.status(201).json(newPostMessage);\n  } catch (error) {\n      res.status(409).json({ message: error.message });\n  }\n}\n\n  export const updatePost = (id, post) => async (dispatch) => {\n    try {\n      const { data } = await api.updatePost(id, post);\n  \n      dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  export const deletePost = (id) => async (dispatch) => {\n    try {\n      await api.deletePost(id);\n  \n      dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  export const likePost = (id) => async (dispatch) => {\n    try {\n      const { data } = await api.likePost(id);\n  \n      dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  "],"mappings":"AAAA,SAAQA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAO,2BAA2B;AACjF,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAK;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,CAAC,CAAC;IAErCF,QAAQ,CAAC;MAACG,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEH;IAAI,CAAC,CAAC;EAE9C,CAAC,CAAC,OAAMI,KAAK,EAAE;IACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAC5C,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAI;EAErB,MAAMC,cAAc,GAAGA,cAAc,CAAC;IAAE,GAAGF,IAAI;IAAEG,OAAO,EAAEL,GAAG,CAACM,MAAM;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EAAE,CAAC,CAAC;EAE5G,IAAI;IACA,MAAML,cAAc,CAACM,IAAI,CAAC,CAAC;IAE3BT,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACR,cAAc,CAAC;EACxC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZM,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEd,OAAO,EAAEH,KAAK,CAACG;IAAQ,CAAC,CAAC;EACpD;AACF,CAAC;AAEC,OAAO,MAAMe,UAAU,GAAGA,CAACC,EAAE,EAAEZ,IAAI,KAAK,MAAOZ,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACyB,UAAU,CAACC,EAAE,EAAEZ,IAAI,CAAC;IAE/CZ,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAES,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAID,EAAE,IAAK,MAAOxB,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMF,GAAG,CAAC2B,UAAU,CAACD,EAAE,CAAC;IAExBxB,QAAQ,CAAC;MAAEG,IAAI,EAAEP,MAAM;MAAEQ,OAAO,EAAEoB;IAAG,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMkB,QAAQ,GAAIF,EAAE,IAAK,MAAOxB,QAAQ,IAAK;EAClD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAAC4B,QAAQ,CAACF,EAAE,CAAC;IAEvCxB,QAAQ,CAAC;MAAEG,IAAI,EAAEN,IAAI;MAAEO,OAAO,EAAEH;IAAK,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module"}